name: Build and Scan + Report blockint

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-image:
    name: Build Images
    runs-on: ubuntu-latest

    permissions:
      contents: read
      security-events: write

    steps:

        - name: Checkout git repo
          uses: actions/checkout@v3

        - name: Set up QEMU
          uses: docker/setup-qemu-action@v2

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2

        - name: Login to Docker Hub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: build seed data
          uses: docker/build-push-action@v4
          with:
            context: "./seed-data"
            push: false
            load: true
            tags: ${{ github.run_id }}
            labels: ${{ steps.meta.outputs.labels }}
            platforms: linux/amd64
            cache-from: type=gha
            cache-to: type=gha,mode=max
        - name: build vote
          uses: docker/build-push-action@v4
          with:
            context: "./vote"
            push: false
            load: true
            tags: ${{ github.run_id }}
            labels: ${{ steps.meta.outputs.labels }}
            platforms: linux/amd64
            cache-from: type=gha
            cache-to: type=gha,mode=max
        - name: build worker
          uses: docker/build-push-action@v4
          with:
            context: "./worker"
            push: false
            load: true
            tags: ${{ github.run_id }}
            labels: ${{ steps.meta.outputs.labels }}
            platforms: linux/amd64
            cache-from: type=gha
            cache-to: type=gha,mode=max
        - name: build result
          uses: docker/build-push-action@v4
          with:
            context: "./result"
            push: false
            load: true
            tags: ${{ github.run_id }}
            labels: ${{ steps.meta.outputs.labels }}
            platforms: linux/amd64

        - name: Run Trivy for all CVEs (non-blocking)
          uses: aquasecurity/trivy-action@master
          with:
            image-ref: ${{ github.run_id }}
            format: table 
            exit-code: 0

        - name: Run Trivy for HIGH,CRITICAL CVEs and report (blocking)
          uses: aquasecurity/trivy-action@master
          with:
            image-ref: ${{ github.run_id }}
            exit-code: 1
            ignore-unfixed: true
            vuln-type: 'os,library'
            severity: 'HIGH,CRITICAL'
            format: 'sarif'
            output: 'trivy-results.sarif'
        
        - name: Upload Trivy scan results to GitHub Security tab
          uses: github/codeql-action/upload-sarif@v2
          if: always()
          with:
            sarif_file: 'trivy-results.sarif'

        - name: Docker Metadata for Final Image Build
          id: docker_meta
          uses: docker/metadata-action@v4
          with:
            images: bretfisher/docker-ci-automation
            flavor: |
                latest=false
            tags: |
                type=raw,value=04
        
        - name: Docker meta
          id: meta
          uses: docker/metadata-action@v4
          with:
            images: |
                ibrahimefe/worker
                ibrahimefe/vote
                ibrahimefe/seed-data
                ibrahimefe/result
            tags: |
                type=raw,value=04
        - name: build seed data
          uses: docker/build-push-action@v4
          with:
            context: "./seed-data"
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
            platforms: linux/amd64,linux/arm64, linux/arm/v7
            cache-from: type=gha
            cache-to: type=gha,mode=max
        - name: build vote
          uses: docker/build-push-action@v4
          with:
            context: "./vote"
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
            platforms: linux/amd64,linux/arm64, linux/arm/v7
            cache-from: type=gha
            cache-to: type=gha,mode=max
        - name: build worker
          uses: docker/build-push-action@v4
          with:
            context: "./worker"
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
            platforms: linux/amd64,linux/arm64, linux/arm/v7
            cache-from: type=gha
            cache-to: type=gha,mode=max
        - name: build result
          uses: docker/build-push-action@v4
          with:
            context: "./result"
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
            platforms: linux/amd64,linux/arm64, linux/arm/v7